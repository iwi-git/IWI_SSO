<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwi.sso.auth.Auth">

	<!-- 사용자 정보 조회 -->
	<select id="selectUser" parameterType="IMap" resultType="IMap">
		SELECT
			A.USER_SEQ,
			A.EMAIL,
			A.PASSWORD,
			A.USER_NO,
			A.USER_NM,
			A.USER_TEL,
			A.USER_HP,
			A.USER_FAX,
			A.USER_BIRTH,
			A.USER_SEX,
			A.ENTRY_YMD,
			A.QUIT_YMD,
			A.POSI_CD,
			A.DUTY_CD,
			A.DEPT_CD
		FROM
			TB_USER A
		WHERE
			A.USE_YN = 'Y'
			AND A.DEL_YN = 'N'
			<if test='email != null and email != ""'>
			AND UPPER(A.EMAIL) = UPPER(#{email})
			</if>
	</select>

	<!-- 사용자 리프레쉬토큰 조회 -->
	<select id="selectUserRefreshToken" parameterType="IMap" resultType="String">
		SELECT
			A.REF_TOKEN
		FROM
			TB_USER A
		WHERE
			A.USE_YN = 'Y'
			AND A.DEL_YN = 'N'
			AND UPPER(A.EMAIL) = UPPER(#{email})
	</select>

	<!-- 리프레쉬토큰으로 사용자 이메일 조회 -->
	<select id="selectEmailByToken" parameterType="IMap" resultType="String">
		SELECT
			A.EMAIL
		FROM
			TB_USER A
		WHERE
			A.USE_YN = 'Y'
			AND A.DEL_YN = 'N'
			AND A.REF_TOKEN = #{refToken}
	</select>

	<!-- 사용자별 사이트 키 조회 -->
	<select id="selectUserSiteKey" parameterType="IMap" resultType="String">
		SELECT
			B.UNIQUE_KEY
		FROM
			TB_USER A
		LEFT OUTER JOIN TB_USER_SITE_KEY B ON
			A.USER_SEQ = B.USER_SEQ
		WHERE
			A.USE_YN = 'Y'
			AND A.DEL_YN = 'N'
			AND UPPER(A.EMAIL) = UPPER(#{email})
			AND UPPER(B.SITE) = UPPER(#{site})
	</select>

	<!-- 사용자 리프레쉬토큰 업데이트 -->
	<update id="updateUserRefreshToken" parameterType="IMap">
		UPDATE
			TB_USER
		SET
			REF_TOKEN = #{refToken},
			REF_ISSUE_DT = SYSDATE
		WHERE
			UPPER(EMAIL) = UPPER(#{email})
	</update>

	<!-- 인증허용정보 조회 -->
	<select id="selectApiAuthInfo" parameterType="IMap" resultType="IMap">
		SELECT
			A.API_AUTH_SEQ,
			A.AUTH_KEY,
			A.DOMAIN
		FROM
			TB_API_AUTH A
		WHERE
			A.USE_YN = 'Y'
			AND A.DEL_YN = 'N'
			AND A.AUTH_KEY = #{authKey}
			AND UPPER(#{domain}) LIKE '%' || UPPER(A.DOMAIN)
			AND ROWNUM = 1
	</select>
	
	<!-- 사이트별 사용자 번호 머지 -->
	<update id="mergeUserSiteKey" parameterType="IMap">
		MERGE INTO
			TB_USER_SITE_KEY
		USING
			DUAL ON (
				USER_SEQ = (SELECT MAX(USER_SEQ) FROM TB_USER WHERE UPPER(EMAIL) = UPPER(#{email}))
				AND UPPER(SITE) = UPPER(#{site})
			)
		WHEN MATCHED THEN
			UPDATE SET
				UNIQUE_KEY = #{uniqueKey}
		WHEN NOT MATCHED THEN
			INSERT (
				USER_SEQ,
				SITE,
				UNIQUE_KEY
			) VALUES (
				(SELECT MAX(USER_SEQ) FROM TB_USER WHERE UPPER(EMAIL) = UPPER(#{email})),
				UPPER(#{site}),
				#{uniqueKey}
			)
	</update>
	
	<!-- 마지막 로그인 일자 업데이트 -->
	<update id="updateUserLastLogin" parameterType="IMap">
		UPDATE
			TB_USER
		SET
			LAST_LOGIN_DT = SYSDATE,
			LAST_LOGIN_IP = #{remoteAddr}
		WHERE
			UPPER(EMAIL) = UPPER(#{email})
	</update>

</mapper>